{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/dotpay.actions.ts","webpack://LSFPlugin/./src/store/dotpay.default.ts","webpack://LSFPlugin/./src/store/dotpay.reducer.ts","webpack://LSFPlugin/./src/store/dotpay.thunks.ts","webpack://LSFPlugin/./src/types/index.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { MockDotpayPaymentPlugin } from './src/index';\nexport { MockDotpayService } from './src/service/index';\nexport { DotpayResponse, DotpayForm, DotpayStatus } from './src/types/index';\nexport { DotpayModuleState } from './src/store/dotpay.default';\n","import { createLibstorefrontModule, HookType, LibStorefront } from '@grupakmk/libstorefront';\nimport { MockDotpayService } from './service';\nimport { dotpayReducer } from './store/dotpay.reducer';\nimport { DotpayDefaultState } from './store/dotpay.default';\nimport { DotpayStatus } from \"./types\";\n\n/**\n * Libstorefront plugin template\n */\nexport const MockDotpayPaymentPlugin = ({ shouldFail = false, failStatus = DotpayStatus.SUCCESS }) => (libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<MockDotpayService>(MockDotpayService).to(MockDotpayService);\n    libstorefront.listenTo(HookType.AfterCoreModulesRegistered, (lsf: LibStorefront) => {\n        lsf.registerModule(createLibstorefrontModule('dotpay', dotpayReducer, DotpayDefaultState));\n        lsf.getIOCContainer().get(MockDotpayService).setConfig({ shouldFail, failStatus });\n    });\n    libstorefront.listenTo(HookType.AfterInit, () => libstorefront.getIOCContainer().get(MockDotpayService).loadLastTransactionFromCache());\n};\n","import { inject, injectable } from 'inversify';\nimport { MockDotpayThunks } from '../store/dotpay.thunks';\nimport { AbstractStore, LibstorefrontInnerState, Task } from '@grupakmk/libstorefront';\nimport { DotpayResponse, DotpayStatus } from '../types';\n\n@injectable()\nexport class MockDotpayService {\n\n    private shouldFail: boolean;\n    private failStatus: DotpayStatus;\n\n    /**\n     * Returns dotpay form that should be POST send\n     * as application/x-www-form-urlencoded form\n     * into a checkout payment pending page\n     * @param {number} orderId\n     * @returns {Promise<any>} Dotpay embeddable form\n     */\n    public getDotpayPaymentForm (): Promise<DotpayResponse> {\n        return this.store.dispatch(MockDotpayThunks.getDotpayForm());\n    }\n\n    /**\n     * Returns dotpay payment status for selected order\n     * @param {string} orderId\n     * @returns {Promise<DotpayStatus>} Payment status\n     */\n    public getDotpayPaymentStatus (): Promise<DotpayStatus> {\n        return this.store.dispatch(MockDotpayThunks.getDotpayStatus(this.shouldFail, this.failStatus));\n    }\n\n    /**\n     * Sends parsed dotpay form\n     */\n    public sendDotpayForm (): Promise<Task> {\n        return this.store.dispatch(MockDotpayThunks.sendDotpayForm(this.shouldFail, this.failStatus));\n    }\n\n    public loadLastTransactionFromCache (): void {\n        this.store.dispatch(MockDotpayThunks.loadLastDotpayTransaction());\n    }\n\n    public setConfig({ shouldFail, failStatus }) {\n        this.shouldFail = shouldFail;\n        this.failStatus = failStatus;\n    }\n\n    public constructor(@inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>) {}\n}\n","import { DotpayForm, DotpayStatus } from '../types';\n\nexport namespace DotpayActions {\n    export const SN_DOTPAY = 'dotpay';\n    export const SET_DOTPAY_FORM = SN_DOTPAY + '/SET_FORM';\n    export const setDotpayForm = (form: DotpayForm) => ({\n        type: SET_DOTPAY_FORM,\n        payload: form\n    });\n\n    export const SET_DOTPAY_URL = SN_DOTPAY + '/SET_URL';\n    export const setDotpayUrl = (url: string) => ({\n        type: SET_DOTPAY_URL,\n        payload: url\n    });\n\n    export const SET_DOTPAY_STATUS = SN_DOTPAY + '/SET_STATUS';\n    export const setDotpayStatus = (status: DotpayStatus) => ({\n        type: SET_DOTPAY_STATUS,\n        payload: status\n    });\n}\n","import { DotpayForm, DotpayStatus } from \"../types\";\n\nexport const DotpayDefaultState: DotpayModuleState = {\n    form: null,\n    url: null,\n    status: DotpayStatus.NOT_EXISTS\n}\n\nexport interface DotpayModuleState {\n    form: DotpayForm,\n    url: string,\n    status: DotpayStatus\n}\n","import { Reducer } from '@grupakmk/libstorefront/dist/src/state-management/types/reducer';\nimport { DotpayDefaultState, DotpayModuleState } from './dotpay.default';\nimport { AnyAction } from '@grupakmk/libstorefront/dist/src/state-management/types/action';\nimport { DotpayActions } from './dotpay.actions';\n\nexport const dotpayReducer: Reducer<DotpayModuleState, AnyAction> = (state = DotpayDefaultState, action) => {\n    switch (action.type) {\n        case DotpayActions.SET_DOTPAY_FORM: {\n            return { ...state, form: action.payload };\n        }\n        case DotpayActions.SET_DOTPAY_STATUS: {\n            return { ...state, status: action.payload };\n        }\n        case DotpayActions.SET_DOTPAY_URL: {\n            return { ...state, url: action.payload };\n        }\n        default: return state || DotpayDefaultState;\n    }\n};\n","import {DotpayActions} from './dotpay.actions';\nimport {StorageCollection, StorageManager} from '@grupakmk/libstorefront';\nimport {DotpayResponse, DotpayStatus} from '../types';\nimport {DotpayModuleState} from './dotpay.default';\n\nconst timeoutPromise = (time = 2000) => new Promise<void>((resolve) => setTimeout(() => resolve(), time));\nexport namespace MockDotpayThunks {\n    // @ts-ignore\n    import setDotpayStatus = DotpayActions.setDotpayStatus;\n    export const getDotpayForm = () => async (dispatch, getState) => {\n        try {\n            const mockData = {\n                amount: 424.25,\n                api_version: \"dev\",\n                bylaw: 1,\n                ch_lock: 0,\n                channel: null,\n                chk: \"e84b61f89df0254fd55dbdfe4761fdf2e918cc37e684fa7af21d00cc2b913f6f\",\n                city: \"Twojego Starego\",\n                control: 37,\n                country: \"PL\",\n                currency: \"PLN\",\n                customer: \"eyJwYXllciI6eyJmaXJzdF9uYW1lIjoiTWF0ZXVzeiIsImxhc3RfbmFtZSI6IlBpZXRyb3dpYWsiLCJlbWFpbCI6ImplYmFjLXBpc0BncnVwYWttay5wbCIsInBob25lIjoiNTE1IDMzMyAxMzIxIn0sIm9yZGVyIjp7ImRlbGl2ZXJ5X2FkZHJlc3MiOnsiY2l0eSI6IlR3b2plZ28gU3RhcmVnbyIsInN0cmVldCI6IkxlY2hhIiwiYnVpbGRpbmdfbnVtYmVyIjoiS2FjennFhHNraWVnbyAzIiwicG9zdGNvZGUiOiIzMy0xMDAiLCJjb3VudHJ5IjoiUEwifX19\",\n                description: \"Nr zamówienia: 6000000038/37\",\n                email: \"jebac-pis@grupakmk.pl\",\n                firstname: \"Mateusz\",\n                id: 768175,\n                ignore_last_payment_channel: 1,\n                lang: \"pl\",\n                lastname: \"Pietrowiak\",\n                personal_data: 1,\n                phone: \"515 333 1321\",\n                postcode: \"33-100\",\n                street: \"Lecha\",\n                street_n1: \"Kaczyńskiego 3\",\n                type: 0,\n                url: \"https://ktm.staging.grupakmk.pl/checkout/dotpay/status\",\n                urlc: \"https://mage.ktm.staging.grupakmk.pl/dotpay/payment/confirm\"\n            };\n\n            let mockDotpayResponse: DotpayResponse = {\n                data: mockData,\n                url: 'https://ssl.dotpay.pl/test_payment/'\n            };\n\n            await dispatch(DotpayActions.setDotpayForm(mockDotpayResponse.data));\n            await dispatch(DotpayActions.setDotpayUrl(mockDotpayResponse.url));\n            StorageManager.getInstance().get(StorageCollection.ORDERS).setItem('last_dotpay_payment', getState().dotpay);\n            return mockDotpayResponse;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    // @ts-ignore\n    export const getDotpayStatus = (shouldFail?: boolean, failStatus?: DotpayStatus) => async (dispatch, getState) => {\n        try {\n            const status = shouldFail ? (failStatus || DotpayStatus.ERROR) : DotpayStatus.SUCCESS;\n            await timeoutPromise(15000);\n            await dispatch(DotpayActions.setDotpayStatus(status));\n            return status;\n        } catch (e) {\n            console.warn('Error while fetching status: ', e);\n            return null;\n        }\n    };\n\n    export const sendDotpayForm = (shouldFail?: boolean, failStatus?: DotpayStatus) => async (dispatch, getState) => {\n        await dispatch(setDotpayStatus(DotpayStatus.PENDING));\n        await timeoutPromise(4000);\n        dispatch(getDotpayStatus(shouldFail, failStatus));\n        StorageManager.getInstance().get(StorageCollection.ORDERS).setItem('last_dotpay_payment', getState().dotpay);\n    };\n\n    export const loadLastDotpayTransaction = () => async (dispatch, getState) => {\n        try {\n            const lastDotpayPayment: DotpayModuleState = await StorageManager.getInstance().get(StorageCollection.ORDERS).getItem('last_dotpay_payment');\n            if (!lastDotpayPayment) { return; }\n            dispatch(DotpayActions.setDotpayUrl(lastDotpayPayment.url));\n            dispatch(DotpayActions.setDotpayForm(lastDotpayPayment.form));\n            dispatch(DotpayActions.setDotpayStatus(lastDotpayPayment.status));\n        } catch (e) {}\n    }\n}\n","export interface DotpayForm {\n    amount: number,\n    api_version: string,\n    bylaw: number,\n    ch_lock: number,\n    channel: string,\n    chk: string,\n    city: string,\n    control: number,\n    country: string,\n    currency: string,\n    customer: string,\n    description: string,\n    email: string,\n    firstname: string,\n    id: number,\n    ignore_last_payment_channel: number,\n    lang: string,\n    lastname: string,\n    personal_data: number,\n    phone: string,\n    postcode: string,\n    street: string,\n    street_n1: string,\n    type: number,\n    url: string\n}\n\nexport interface DotpayResponse {\n    url: string,\n    data: DotpayForm\n}\n\nexport enum DotpayStatus {\n    NOT_EXISTS = -1, // Order doesn't exist\n    ERROR = 0,  // An error with payment has been occurred\n    PENDING = 1,    // Shop is still waiting for confirmation of payment\n    SUCCESS = 2,    // Order has been paid successfully\n    TOO_MANY = 3,   // Order has been paid before\n    OTHER_STATUS = 4 // Status different than ERROR or PENDING\n}\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");"],"sourceRoot":""}